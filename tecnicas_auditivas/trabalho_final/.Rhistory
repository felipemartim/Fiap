cps <- Corpus(DirSource("transcricoes/audio_um.txt",
encoding = "UTF-8"),
readerControl = list(language = "pt"))
audio_um <- readLines('transcricoes/audio_um.txt')
audio_um <- readLines('transcricoes/audio_um.txt')
audio_um
audio_um <- readLines('transcricoes/audio_um.txt')
audio_um
audio_um <- readLines('transcricoes/audio_um.txt')
audio_real <- readLines('transcricoes/audio_real.txt')
audio_um <- readLines('transcricoes/audio_um.txt')
audio_real <- readLines('transcricoes/audio_real.txt')
rm(list = ls())
audio_um <- readLines('transcricoes/audio_um.txt')
cps <- Corpus(VectorSource(audio_um),
encoding = "UTF-8"),
rm(list = ls())
audio_um <- readLines('transcricoes/audio_um.txt')
cps <- Corpus(VectorSource(audio_um), readerControl = list(language = "pt"))
cps
rm(list = ls())
audio_um <- readLines('transcricoes/audio_um.txt')
cps_um <- Corpus(VectorSource(audio_um), readerControl = list(language = "pt"))
audio_real <- readLines('transcricoes/audio_real.txt')
cps_real <- Corpus(VectorSource(audio_real), readerControl = list(language = "pt"))
cps_real
rm(list = ls())
audio_um <- readLines('transcricoes/audio_um.txt')
audio_real <- readLines('transcricoes/audio_real.txt')
cps_um <- Corpus(VectorSource(audio_um), readerControl = list(language = "pt"))
cps_real <- Corpus(VectorSource(audio_real), readerControl = list(language = "pt"))
cps_um <- tm_map(cps_um, stripWhitespace)
cps_um <- tm_map(cps_um, content_transformer(tolower))
cps_um <- tm_map(cps_um, removeWords, stopwords("portuguese"))
cps_um <- tm_map(cps_um, removeNumbers)
cps_um <- tm_map(cps_um, removePunctuation)
cps_real <- tm_map(cps_real, stripWhitespace)
cps_real <- tm_map(cps_real, content_transformer(tolower))
cps_real <- tm_map(cps_real, removeWords, stopwords("portuguese"))
cps_real <- tm_map(cps_real, removeNumbers)
cps_real <- tm_map(cps_real, removePunctuation)
cps_um <- tm_map(cps_um, stripWhitespace)
cps_um <- tm_map(cps_um, content_transformer(tolower))
cps_um <- tm_map(cps_um, removeWords, stopwords("portuguese"))
cps_um <- tm_map(cps_um, removeNumbers)
cps_um <- tm_map(cps_um, removePunctuation)
cps_real <- tm_map(cps_real, stripWhitespace)
cps_real <- tm_map(cps_real, content_transformer(tolower))
cps_real <- tm_map(cps_real, removeWords, stopwords("portuguese"))
cps_real <- tm_map(cps_real, removeNumbers)
cps_real <- tm_map(cps_real, removePunctuation)
cps_um <- tm_map(cps_um, stripWhitespace)
cps_um <- tm_map(cps_um, stripWhitespace)
rm(list = ls())
audio_um <- readLines('transcricoes/audio_um.txt')
audio_real <- readLines('transcricoes/audio_real.txt')
cps_um <- VCorpus(VectorSource(audio_um), readerControl = list(language = "pt"))
cps_real <- VCorpus(VectorSource(audio_real), readerControl = list(language = "pt"))
cps_um <- tm_map(cps_um, stripWhitespace)
cps_um <- tm_map(cps_um, stripWhitespace)
cps_um <- tm_map(cps_um, content_transformer(tolower))
cps_um <- tm_map(cps_um, removeWords, stopwords("portuguese"))
cps_um <- tm_map(cps_um, removeNumbers)
cps_um <- tm_map(cps_um, removePunctuation)
cps_real <- tm_map(cps_real, stripWhitespace)
cps_real <- tm_map(cps_real, content_transformer(tolower))
cps_real <- tm_map(cps_real, removeWords, stopwords("portuguese"))
cps_real <- tm_map(cps_real, removeNumbers)
cps_real <- tm_map(cps_real, removePunctuation)
removeDiacritics <- function(str) {
stri_trans_general(str, "Latin-ASCII")
}
cps_um <- tm_map(cps_um, removeDiacritics)
cps_real <- tm_map(cps_real, removeDiacritics)
removeDiacritics <- function(str) {
#stri_trans_general(str, "Latin-ASCII")
}
cps_um <- tm_map(cps_um, removeDiacritics)
cps_real <- tm_map(cps_real, removeDiacritics)
removeDiacritics <- function(str) {
str
#stri_trans_general(str, "Latin-ASCII")
}
cps_um <- tm_map(cps_um, removeDiacritics)
cps_real <- tm_map(cps_real, removeDiacritics)
removeDiacritics <- function(str) {
str
#stri_trans_general(str, "Latin-ASCII")
}
cps_um <- tm_map(cps_um, removeDiacritics)
cps_real <- tm_map(cps_real, removeDiacritics)
removeDiacritics <- function(str) {
print str
removeDiacritics <- function(str) {
print(str)
#stri_trans_general(str, "Latin-ASCII")
}
cps_um <- tm_map(cps_um, removeDiacritics)
cps_real <- tm_map(cps_real, removeDiacritics)
cps_um
cps_real
View(cps_real)
rm(list = ls())
audio_um <- readLines('transcricoes/audio_um.txt')
audio_real <- readLines('transcricoes/audio_real.txt')
cps_um <- Corpus(VectorSource(audio_um), readerControl = list(language = "pt"))
cps_real <- Corpus(VectorSource(audio_real), readerControl = list(language = "pt"))
rm(list = ls())
audio_um <- readLines('transcricoes/audio_um.txt')
audio_real <- readLines('transcricoes/audio_real.txt')
cps_um <- VCorpus(VectorSource(audio_um), readerControl = list(language = "pt"))
cps_real <- Corpus(VectorSource(audio_real), readerControl = list(language = "pt"))
rm(list = ls())
audio_um <- readLines('transcricoes/audio_um.txt')
audio_real <- readLines('transcricoes/audio_real.txt')
cps_um <- VCorpus(VectorSource(audio_um), readerControl = list(language = "pt"))
cps_real <- VCorpus(VectorSource(audio_real), readerControl = list(language = "pt"))
cps_real
cps_um <- tm_map(cps_um, stripWhitespace)
cps_um <- tm_map(cps_um, stripWhitespace)
cps_um <- tm_map(cps_um, content_transformer(tolower))
cps_um <- tm_map(cps_um, removeWords, stopwords("portuguese"))
cps_um <- tm_map(cps_um, removeNumbers)
cps_um <- tm_map(cps_um, removePunctuation)
cps_real <- tm_map(cps_real, stripWhitespace)
cps_real <- tm_map(cps_real, content_transformer(tolower))
cps_real <- tm_map(cps_real, removeWords, stopwords("portuguese"))
cps_real <- tm_map(cps_real, removeNumbers)
cps_real <- tm_map(cps_real, removePunctuation)
cps_real
removeDiacritics <- function(str) {
print(str)
#stri_trans_general(str, "Latin-ASCII")
}
cps_um <- tm_map(cps_um, removeDiacritics)
cps_real <- tm_map(cps_real, removeDiacritics)
removeDiacritics <- function(str) {
print(str)
#stri_trans_general(str, "Latin-ASCII")
}
cps_um <- tm_map(cps_um, removeDiacritics)
cps_real <- tm_map(cps_real, removeDiacritics)
removeDiacritics <- function(str) {
#print(str)
stri_trans_general(str, "Latin-ASCII")
}
cps_um <- tm_map(cps_um, removeDiacritics)
cps_real <- tm_map(cps_real, removeDiacritics)
rm(list = ls())
audio_um <- readLines('transcricoes/audio_um.txt')
audio_real <- readLines('transcricoes/audio_real.txt')
cps_um <- VCorpus(VectorSource(audio_um), readerControl = list(language = "pt"))
cps_real <- VCorpus(VectorSource(audio_real), readerControl = list(language = "pt"))
cps_um <- tm_map(cps_um, stripWhitespace)
cps_um <- tm_map(cps_um, content_transformer(tolower))
cps_um <- tm_map(cps_um, removeWords, stopwords("portuguese"))
cps_um <- tm_map(cps_um, removeNumbers)
cps_um <- tm_map(cps_um, removePunctuation)
cps_real <- tm_map(cps_real, stripWhitespace)
cps_real <- tm_map(cps_real, content_transformer(tolower))
cps_real <- tm_map(cps_real, removeWords, stopwords("portuguese"))
cps_real <- tm_map(cps_real, removeNumbers)
cps_real <- tm_map(cps_real, removePunctuation)
cps <- tm_map(cps, removeWords, c("vai", "entao", "ser", "vao", "acho", "porque", "vez", "cada", "sim", "ter", "wer", "tao", "tem", "cada", "irao", "e", "la", "ne"))
cps_um <- tm_map(cps_um, removeWords, c("vai", "entao", "ser", "vao", "acho", "porque", "vez", "cada", "sim", "ter", "wer", "tao", "tem", "cada", "irao", "e", "la", "ne"))
cps_real <- tm_map(cps_real, removeWords, c("vai", "entao", "ser", "vao", "acho", "porque", "vez", "cada", "sim", "ter", "wer", "tao", "tem", "cada", "irao", "e", "la", "ne"))
freq <- sort(colSums(as.matrix(dtm_um)), decreasing = TRUE)
dtm_um <- DocumentTermMatrix(cps_um)
dtm_um
dtm_real <- DocumentTermMatrix(cps_real)
dtm_real
freq <- sort(colSums(as.matrix(dtm_um)), decreasing = TRUE)
head(freq, 50)
freq <- sort(colSums(as.matrix(dtm_real)), decreasing = TRUE)
head(freq, 50)
findAssocs(dtm_um, c("idosos", "porcento", "anos", "idade", "consumo"), c(0.65, 0.65, 0.6, 0.5, 0.55))
findAssocs(dtm_real, c("caixa", "desconto", "juros", "pagamento", "valor"), c(0.65, 0.65, 0.6, 0.5, 0.55))
findAssocs(dtm_um, c("idosos", "porcento", "anos", "idade", "consumo"), c(0.3, 0.65, 0.6, 0.5, 0.55))
findAssocs(dtm_um, c("idosos", "porcento", "anos", "idade", "consumo"), c(0.1, 0.65, 0.6, 0.5, 0.55))
findAssocs(dtm_um, c("idosos", "porcento", "anos", "idade", "consumo"), c(0.9, 0.65, 0.6, 0.5, 0.55))
findAssocs(dtm_um, c("idosos", "porcento", "anos", "idade", "consumo"), c(0.1, 0.1, 0.1, 0.1, 0.1))
findAssocs(dtm_real, c("caixa", "desconto", "juros", "pagamento", "valor"), c(0.1, 0.65, 0.6, 0.5, 0.55))
tdm_um <- TermDocumentMatrix(cps_um,
control = list(wordLengths = c(1, Inf)))
tdm_um
tdm_real <- TermDocumentMatrix(cps_real,
control = list(wordLengths = c(1, Inf)))
tdm_real
term.freq <- rowSums(as.matrix(tdm_um))
term.freq <- subset(term.freq, term.freq >= 30)
df <- data.frame(term = names(term.freq), freq = term.freq)
library(ggplot2)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
term.freq <- rowSums(as.matrix(tdm_um))
term.freq <- subset(term.freq, term.freq >= 10)
df <- data.frame(term = names(term.freq), freq = term.freq)
library(ggplot2)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
term.freq <- rowSums(as.matrix(tdm_um))
term.freq <- subset(term.freq, term.freq >= 1)
df <- data.frame(term = names(term.freq), freq = term.freq)
library(ggplot2)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
term.freq <- rowSums(as.matrix(tdm_um))
term.freq <- subset(term.freq, term.freq >= 2)
df <- data.frame(term = names(term.freq), freq = term.freq)
library(ggplot2)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
term.freq <- rowSums(as.matrix(tdm_um))
term.freq <- subset(term.freq, term.freq >= 3)
df <- data.frame(term = names(term.freq), freq = term.freq)
library(ggplot2)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
term.freq <- rowSums(as.matrix(tdm_real))
term.freq <- subset(term.freq, term.freq >= 3)
df <- data.frame(term = names(term.freq), freq = term.freq)
library(ggplot2)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
term.freq <- rowSums(as.matrix(tdm_real))
term.freq <- subset(term.freq, term.freq >= 2)
df <- data.frame(term = names(term.freq), freq = term.freq)
library(ggplot2)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
term.freq <- rowSums(as.matrix(tdm_real))
term.freq <- subset(term.freq, term.freq >= 1)
df <- data.frame(term = names(term.freq), freq = term.freq)
library(ggplot2)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
term.freq <- rowSums(as.matrix(tdm_real))
term.freq <- subset(term.freq, term.freq >= 2)
df <- data.frame(term = names(term.freq), freq = term.freq)
library(ggplot2)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
cps_um <- tm_map(cps_um, removeWords, c("vai", "entao", "ser", "vao", "acho", "porque", "vez", "cada", "sim", "ter", "wer", "tao", "tem", "cada", "irao", "e", "la", "ne", "s", "m", "é", "v", "t", "c"))
cps_real <- tm_map(cps_real, removeWords, c("vai", "entao", "ser", "vao", "acho", "porque", "vez", "cada", "sim", "ter", "wer", "tao", "tem", "cada", "irao", "e", "la", "ne", "s", "m", "é", "v", "t", "c"))
term.freq <- rowSums(as.matrix(tdm_um))
term.freq <- subset(term.freq, term.freq >= 3)
df <- data.frame(term = names(term.freq), freq = term.freq)
library(ggplot2)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
cps_um <- tm_map(cps_um, removeWords, c("vai", "entao", "ser", "vao", "acho", "porque", "vez", "cada", "sim", "ter", "wer", "tao", "tem", "cada", "irao", "e", "la", "ne", "s", "m", "é", "v", "t", "c"))
cps_real <- tm_map(cps_real, removeWords, c("vai", "entao", "ser", "vao", "acho", "porque", "vez", "cada", "sim", "ter", "wer", "tao", "tem", "cada", "irao", "e", "la", "ne", "s", "m", "é", "v", "t", "c"))
dtm_um <- DocumentTermMatrix(cps_um)
dtm_um
dtm_real <- DocumentTermMatrix(cps_real)
dtm_real
freq <- sort(colSums(as.matrix(dtm_um)), decreasing = TRUE)
head(freq, 50)
freq <- sort(colSums(as.matrix(dtm_real)), decreasing = TRUE)
head(freq, 50)
term.freq <- rowSums(as.matrix(tdm_um))
term.freq <- subset(term.freq, term.freq >= 3)
df <- data.frame(term = names(term.freq), freq = term.freq)
library(ggplot2)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
tdm_um <- TermDocumentMatrix(cps_um,
control = list(wordLengths = c(1, Inf)))
tdm_um
term.freq <- rowSums(as.matrix(tdm_um))
term.freq <- subset(term.freq, term.freq >= 3)
df <- data.frame(term = names(term.freq), freq = term.freq)
library(ggplot2)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
tdm_real <- TermDocumentMatrix(cps_real,
control = list(wordLengths = c(1, Inf)))
tdm_real
cps_um <- tm_map(cps_um, removeWords, c("vai", "entao", "ser", "vao", "acho", "porque", "vez", "cada", "sim", "ter", "wer", "tao", "tem", "cada", "irao", "e", "la", "ne", "s", "m", "é", "v", "t", "c", "p"))
cps_real <- tm_map(cps_real, removeWords, c("vai", "entao", "ser", "vao", "acho", "porque", "vez", "cada", "sim", "ter", "wer", "tao", "tem", "cada", "irao", "e", "la", "ne", "s", "m", "é", "v", "t", "c"))
tdm_um <- TermDocumentMatrix(cps_um,
control = list(wordLengths = c(1, Inf)))
tdm_um
term.freq <- rowSums(as.matrix(tdm_um))
term.freq <- subset(term.freq, term.freq >= 3)
df <- data.frame(term = names(term.freq), freq = term.freq)
library(ggplot2)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
term.freq <- rowSums(as.matrix(tdm_real))
term.freq <- subset(term.freq, term.freq >= 2)
df <- data.frame(term = names(term.freq), freq = term.freq)
library(ggplot2)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
term.freq <- rowSums(as.matrix(tdm_real))
term.freq <- subset(term.freq, term.freq >= 1)
df <- data.frame(term = names(term.freq), freq = term.freq)
library(ggplot2)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
term.freq <- rowSums(as.matrix(tdm_real))
term.freq <- subset(term.freq, term.freq >= 2)
df <- data.frame(term = names(term.freq), freq = term.freq)
library(ggplot2)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
m <- as.matrix(tdm_um)
# calculate the frequency of words and sort it by frequency
word.freq <- sort(rowSums(m), decreasing = T)
pal <- brewer.pal(9, "BuGn")
pal <- pal[-(1:4)]
wordcloud(words = names(word.freq), freq = word.freq, min.freq = 10,
random.order = F, colors = pal, max.words =90, scale=c(3,.5))
m <- as.matrix(tdm_real)
# calculate the frequency of words and sort it by frequency
word.freq <- sort(rowSums(m), decreasing = T)
pal <- brewer.pal(9, "BuGn")
pal <- pal[-(1:4)]
wordcloud(words = names(word.freq), freq = word.freq, min.freq = 10,
random.order = F, colors = pal, max.words =90, scale=c(3,.5))
cps_um <- tm_map(cps_um, removeWords, c("vai", "entao", "ser", "vao", "acho", "porque", "vez", "cada", "sim", "ter", "wer", "tao", "tem", "cada", "irao", "e", "la", "ne", "s", "m", "é", "v", "t", "c", "p", "g", "w"))
cps_real <- tm_map(cps_real, removeWords, c("vai", "entao", "ser", "vao", "acho", "porque", "vez", "cada", "sim", "ter", "wer", "tao", "tem", "cada", "irao", "e", "la", "ne", "s", "m", "é", "v", "t", "c"))
tdm2 <- removeSparseTerms(tdm_um, sparse = 0.83)
m2 <- as.matrix(tdm2)
# cluster terms
distMatrix <- dist(scale(m2))
fit <- hclust(distMatrix, method = "ward.D2")
plot(fit)
rect.hclust(fit, k = 4)
tdm2 <- removeSparseTerms(tdm_um, sparse = 0.93)
m2 <- as.matrix(tdm2)
# cluster terms
distMatrix <- dist(scale(m2))
fit <- hclust(distMatrix, method = "ward.D2")
plot(fit)
rect.hclust(fit, k = 4)
tdm2 <- removeSparseTerms(tdm_um, sparse = 0.63)
m2 <- as.matrix(tdm2)
# cluster terms
distMatrix <- dist(scale(m2))
fit <- hclust(distMatrix, method = "ward.D2")
plot(fit)
rect.hclust(fit, k = 4)
tdm2 <- removeSparseTerms(tdm_um, sparse = 0.33)
m2 <- as.matrix(tdm2)
# cluster terms
distMatrix <- dist(scale(m2))
fit <- hclust(distMatrix, method = "ward.D2")
plot(fit)
rect.hclust(fit, k = 4)
tdm2 <- removeSparseTerms(tdm_um, sparse = 0.993)
m2 <- as.matrix(tdm2)
# cluster terms
distMatrix <- dist(scale(m2))
fit <- hclust(distMatrix, method = "ward.D2")
plot(fit)
rect.hclust(fit, k = 4)
tdm2 <- removeSparseTerms(tdm_um, sparse = 0.1)
m2 <- as.matrix(tdm2)
# cluster terms
distMatrix <- dist(scale(m2))
fit <- hclust(distMatrix, method = "ward.D2")
plot(fit)
rect.hclust(fit, k = 4)
tdm2 <- removeSparseTerms(tdm_um, sparse = 1)
tdm2 <- removeSparseTerms(tdm_um, sparse = 0.99999)
m2 <- as.matrix(tdm2)
# cluster terms
distMatrix <- dist(scale(m2))
fit <- hclust(distMatrix, method = "ward.D2")
plot(fit)
rect.hclust(fit, k = 4)
tdm2 <- removeSparseTerms(tdm_um, sparse = 0.0001)
m2 <- as.matrix(tdm2)
# cluster terms
distMatrix <- dist(scale(m2))
fit <- hclust(distMatrix, method = "ward.D2")
plot(fit)
rect.hclust(fit, k = 4)
tdm2 <- removeSparseTerms(tdm_um, sparse = 0)
tdm2 <- removeSparseTerms(tdm_um, sparse = 0.000000001)
m2 <- as.matrix(tdm2)
# cluster terms
distMatrix <- dist(scale(m2))
fit <- hclust(distMatrix, method = "ward.D2")
plot(fit)
rect.hclust(fit, k = 4)
tdm2 <- removeSparseTerms(tdm_um, sparse = 0.99999999999999999999999999)
tdm2 <- removeSparseTerms(tdm_um, sparse = 0.9999999999999999999)
tdm2 <- removeSparseTerms(tdm_um, sparse = 0.99999999999999)
m2 <- as.matrix(tdm2)
# cluster terms
distMatrix <- dist(scale(m2))
fit <- hclust(distMatrix, method = "ward.D2")
plot(fit)
rect.hclust(fit, k = 4)
dtm <- as.DocumentTermMatrix(tdm_um)
lda <- LDA(dtm, k = 4) # find 4 topics
(term <- terms(lda, 10)) # first 10 terms of every topic
dtm <- as.DocumentTermMatrix(tdm_real)
lda <- LDA(dtm, k = 4) # find 4 topics
(term <- terms(lda, 10)) # first 10 terms of every topic
dtm <- as.DocumentTermMatrix(tdm_real)
lda <- LDA(dtm, k = 4) # find 4 topics
(term <- terms(lda, 10)) # first 10 terms of every topic
library(tm)
library(NLP)
library(qdap) # Quantitative discourse analysis of transcripts.
library(qdapDictionaries)
library(dplyr) # Data wrangling, pipe operator %>%().
library(RColorBrewer) # Generate palette of colours for plots.
library(ggplot2) # Plot word frequencies.
library(scales) # Include commas in numbers.
library(stringi)
library(wordcloud)
library(topicmodels)
rm(list = ls())
audio_um <- readLines('transcricoes/audio_um.txt')
audio_real <- readLines('transcricoes/audio_real.txt')
cps_um <- VCorpus(VectorSource(audio_um), readerControl = list(language = "pt"))
cps_real <- VCorpus(VectorSource(audio_real), readerControl = list(language = "pt"))
cps_um <- tm_map(cps_um, stripWhitespace)
cps_um <- tm_map(cps_um, content_transformer(tolower))
cps_um <- tm_map(cps_um, removeWords, stopwords("portuguese"))
cps_um <- tm_map(cps_um, removeNumbers)
cps_um <- tm_map(cps_um, removePunctuation)
cps_real <- tm_map(cps_real, stripWhitespace)
cps_real <- tm_map(cps_real, content_transformer(tolower))
cps_real <- tm_map(cps_real, removeWords, stopwords("portuguese"))
cps_real <- tm_map(cps_real, removeNumbers)
cps_real <- tm_map(cps_real, removePunctuation)
cps_um <- tm_map(cps_um, removeWords, c("vai", "entao", "ser", "vao", "acho", "porque", "vez", "cada", "sim", "ter", "wer", "tao", "tem", "cada", "irao", "e", "la", "ne", "s", "m", "é", "v", "t", "c", "p", "g", "w"))
cps_real <- tm_map(cps_real, removeWords, c("vai", "entao", "ser", "vao", "acho", "porque", "vez", "cada", "sim", "ter", "wer", "tao", "tem", "cada", "irao", "e", "la", "ne", "s", "m", "é", "v", "t", "c"))
dtm_um <- DocumentTermMatrix(cps_um)
dtm_um
dtm_real <- DocumentTermMatrix(cps_real)
dtm_real
freq <- sort(colSums(as.matrix(dtm_um)), decreasing = TRUE)
head(freq, 50)
freq <- sort(colSums(as.matrix(dtm_real)), decreasing = TRUE)
head(freq, 50)
tdm_um <- TermDocumentMatrix(cps_um,
control = list(wordLengths = c(1, Inf)))
tdm_um
tdm_real <- TermDocumentMatrix(cps_real,
control = list(wordLengths = c(1, Inf)))
tdm_real
term.freq <- rowSums(as.matrix(tdm_um))
term.freq <- subset(term.freq, term.freq >= 3)
df <- data.frame(term = names(term.freq), freq = term.freq)
library(ggplot2)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
term.freq <- rowSums(as.matrix(tdm_real))
term.freq <- subset(term.freq, term.freq >= 2)
df <- data.frame(term = names(term.freq), freq = term.freq)
library(ggplot2)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
m <- as.matrix(tdm_um)
# calculate the frequency of words and sort it by frequency
word.freq <- sort(rowSums(m), decreasing = T)
pal <- brewer.pal(9, "BuGn")
pal <- pal[-(1:4)]
wordcloud(words = names(word.freq), freq = word.freq, min.freq = 10,
random.order = F, colors = pal, max.words =90, scale=c(3,.5))
m <- as.matrix(tdm_real)
# calculate the frequency of words and sort it by frequency
word.freq <- sort(rowSums(m), decreasing = T)
pal <- brewer.pal(9, "BuGn")
pal <- pal[-(1:4)]
wordcloud(words = names(word.freq), freq = word.freq, min.freq = 10,
random.order = F, colors = pal, max.words =90, scale=c(3,.5))
term.freq <- rowSums(as.matrix(cps_um))
term.freq <- rowSums(cps_um)
term.freq <- rowSums(as.matrix(tdm_um))
term.freq <- subset(term.freq, term.freq >= 3)
df <- data.frame(term = names(term.freq), freq = term.freq)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
dtm_um <- DocumentTermMatrix(cps_um)
freq <- sort(colSums(as.matrix(dtm_um)), decreasing = TRUE)
head(freq, 50)
tdm_um <- TermDocumentMatrix(cps_um,
control = list(wordLengths = c(1, Inf)))
term.freq <- rowSums(as.matrix(tdm_um))
term.freq <- subset(term.freq, term.freq >= 3)
df <- data.frame(term = names(term.freq), freq = term.freq)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
tdm_real <- TermDocumentMatrix(cps_real,
control = list(wordLengths = c(1, Inf)))
term.freq <- rowSums(as.matrix(tdm_real))
term.freq <- subset(term.freq, term.freq >= 2)
df <- data.frame(term = names(term.freq), freq = term.freq)
ggplot(df, aes(x = term, y = freq)) + geom_bar(stat = "identity") +
xlab("Terms") + ylab("Count") + coord_flip()
m <- as.matrix(tdm_um)
# calculate the frequency of words and sort it by frequency
word.freq <- sort(rowSums(m), decreasing = T)
pal <- brewer.pal(9, "BuGn")
pal <- pal[-(1:4)]
wordcloud(words = names(word.freq), freq = word.freq, min.freq = 10,
random.order = F, colors = pal, max.words =90, scale=c(3,.5))
m <- as.matrix(tdm_real)
# calculate the frequency of words and sort it by frequency
word.freq <- sort(rowSums(m), decreasing = T)
pal <- brewer.pal(9, "BuGn")
pal <- pal[-(1:4)]
wordcloud(words = names(word.freq), freq = word.freq, min.freq = 10,
random.order = F, colors = pal, max.words =90, scale=c(3,.5))
